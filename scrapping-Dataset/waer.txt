<div class="post-body entry-content float-container" id="post-body-5679318352365200467">
<a href="https://www.javaguides.net/p/java-multithreading-utorial.html" target="_blank">Multithreading</a> is a powerful concept in Java that allows concurrent execution of multiple threads within a single program. This quiz aims to test your knowledge of Java multithreading concepts, coding knowledge, and features. Each question consists of multiple-choice options, and you can view the answers along with detailed explanations.<div><div dir="ltr" trbidi="on"><div dir="ltr" trbidi="on"><p>Learn everything about Java Multithreading: <a href="https://www.javaguides.net/p/java-multithreading-utorial.html" target="_blank">Java Multithreading Tutorial</a></p><p>Learn and Master Java Programming: <a href="https://www.javaguides.net/p/java-tutorial-learn-java-programming.html" target="_blank">Learn Java Programming with Examples</a></p><p><span face='-apple-system, "system-ui", "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"' style="background-color: white; font-size: 16px;"></span></p><p><span face='-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"' style="background-color: white; font-size: 16px;"></span></p><p><span face='-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"' style="background-color: white;"></span></p><p>Check out 100+ quiz questions: <a href="https://www.javaguides.net/p/java-daily-quiz.html" target="_blank">100+ Quiz Questions to Test Your Java, Spring Boot, Microservices, Hibernate, REST API Skills</a></p></div></div></div><h1 style="text-align: left;"><span><a name="more"></a></span>1. What is multithreading in Java? </h1><div>a) A programming language for concurrent execution. </div><div>b) A technique to execute multiple programs simultaneously. </div><div>c) A concept of executing multiple threads concurrently within a single program. </div><div>d) A method for parallel processing of data. </div><div><h2>Answer:</h2><p>c) A concept of executing multiple threads concurrently within a single program. </p><h2>Explanation:</h2></div><div>Multithreading refers to the ability of a program to execute multiple threads concurrently within a single process.</div><h1 style="text-align: left;">2. What is a thread in Java? </h1><div>a) A lightweight process that executes a sequence of instructions.</div><div>b) A memory allocation unit in Java. </div><div>c) A Java keyword to define a loop construct. </div><div>d) A data structure to store multiple values. </div><div><h2>Answer:</h2><p>a) A lightweight process that executes a sequence of instructions.</p><h2>Explanation:</h2></div><div>A thread in Java is a lightweight, independent unit of execution that runs a sequence of instructions.</div><h1 style="text-align: left;">3. Which class is used to create a thread in Java? </h1><div>a) Thread </div><div>b) Runnable </div><div>c) Process </div><div>d) Executor </div><div><h2>Answer:</h2><p>a) Thread </p><h2>Explanation:</h2></div><div>The Thread class is used to create and control threads in Java.</div><h1 style="text-align: left;">4. How can synchronization be achieved in Java threads? </h1><div>a) Using the synchronized keyword. </div><div>b) Using the volatile keyword. </div><div>c) Using the final keyword. </div><div>d) Using the static keyword. </div><div><h2>Answer:</h2><p>a) Using the synchronized keyword.</p><h2>Explanation:</h2></div><div>Synchronization in Java threads can be achieved by using the <i>synchronized</i> keyword to protect critical sections of code from concurrent access.</div><h1 style="text-align: left;">5. What is the purpose of the wait() method in Java threads? </h1><div>a) To pause the execution of a thread. </div><div>b) To terminate a thread. </div><div>c) To notify other threads to resume execution. </div><div>d) To release the lock held by the thread. </div><div><h2>Answer:</h2><p>a) To pause the execution of a thread. </p><h2>Explanation:</h2></div><div>The <i>wait()</i> method is used to temporarily pause the execution of a thread and release the lock it holds.</div><h1 style="text-align: left;">6. Which method is used to start the execution of a thread? </h1><div>a) start() </div><div>b) run() </div><div>c) execute() </div><div>d) begin() </div><div><h2>Answer:</h2><p>a) start() </p><h2>Explanation:</h2></div><div>The <i>start()</i> method is used to start the execution of a thread. It internally calls the run() method.</div><h1 style="text-align: left;">7. What is the maximum number of threads that can be created in a Java program? </h1><div>a) There is no fixed limit. </div><div>b) It depends on the amount of available memory. </div><div>c) It depends on the number of CPU cores. </div><div>d) It is limited to 100 threads. </div><div><h2>Answer:</h2><p>a) There is no fixed limit. </p><h2>Explanation:</h2></div><div>The number of threads that can be created in a Java program is limited by available system resources, such as memory, rather than a fixed limit.</div><h1 style="text-align: left;">8. What is the purpose of the join() method in Java threads? </h1><div>a) To interrupt the execution of a thread. </div><div>b) To wait for a thread to finish its execution. </div><div>c) To schedule the execution of a thread. </div><div>d) To notify a thread to stop execution. </div><div><h2>Answer:</h2><p>b) To wait for a thread to finish its execution. </p><h2>Explanation:</h2></div><div>The <i>join()</i> method is used to wait for a thread to complete its execution before proceeding with the execution of the calling thread.</div><h1 style="text-align: left;">9. What is the main advantage of multithreading in Java? </h1><div>a) Improved program performance.</div><div>b) Simplified program structure. </div><div>c) Reduced memory usage. </div><div>d) Elimination of runtime errors. </div><div><h2>Answer:</h2><p>a) Improved program performance.</p><h2>Explanation:</h2></div><div>One of the main advantages of <a href="https://www.javaguides.net/p/java-multithreading-utorial.html" target="_blank">Multithreading</a> in Java is improved program performance by utilizing available CPU cores and concurrently executing tasks.</div><div><div dir="ltr" trbidi="on"><div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
</div>
<h1 style="text-align: left;">10. Consider the following program and predict the output:</h1><div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; overflow-wrap: normal; overflow: auto; padding: 16px; word-break: normal;'><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">MyThread</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">extends</span> <span class="pl-e" style="box-sizing: border-box; color: #6f42c1;">Thread</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">MyThread</span>(<span class="pl-smi" style="box-sizing: border-box;">String</span> <span class="pl-v" style="box-sizing: border-box; color: #e36209;">name</span>) {
        <span class="pl-c1" style="box-sizing: border-box; color: #005cc5;">this</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>setName(name);
        start();
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>in constructor <span class="pl-pds" style="box-sizing: border-box;">"</span></span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">+</span> getName());
    }

    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">@Override</span>
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">start</span>() {
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>in start <span class="pl-pds" style="box-sizing: border-box;">"</span></span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">+</span> getName());
    }

    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">run</span>() {
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>in run <span class="pl-pds" style="box-sizing: border-box;">"</span></span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">+</span> getName());
    }
}

<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">ThreadTest</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">static</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">main</span>(<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">String</span>[] <span class="pl-v" style="box-sizing: border-box; color: #e36209;">args</span>) {
        <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">MyThread</span>(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>oops<span class="pl-pds" style="box-sizing: border-box;">"</span></span>);
    }
}</pre>
</div>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
a)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>in start oops
in constructor oops
</code></pre>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
b)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>in start oops
in run oops
in constructor oops
</code></pre>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
c)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>in start oops
in constructor oops
in run oops
</code></pre>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
d)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>in constructor oops
in start oops
in run oops</code></pre>
<h2>Answer:</h2><pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>in start oops
in constructor oops</code></pre><h2>Explanation:</h2>You have overridden the <i>start()</i> method, so the <i>run()</i> method is never called!</div><div dir="ltr" trbidi="on"><h1 style="text-align: left;">11. Consider the following program and predict the output:</h1><div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; overflow-wrap: normal; overflow: auto; padding: 16px; word-break: normal;'><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">MyThread</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">extends</span> <span class="pl-e" style="box-sizing: border-box; color: #6f42c1;">Thread</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">@Override</span>
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">run</span>() {
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>In run method; thread name is: <span class="pl-pds" style="box-sizing: border-box;">"</span></span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">+</span> <span class="pl-smi" style="box-sizing: border-box;">Thread</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>currentThread()<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>getName());
    }
}

<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">ThreadTest</span> {

    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">static</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">main</span>(<span class="pl-smi" style="box-sizing: border-box;">String</span> <span class="pl-v" style="box-sizing: border-box; color: #e36209;">args</span>[]) {
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span> myThread <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">=</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">MyThread</span>();
        myThread<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>run(); <span class="pl-c" style="box-sizing: border-box; color: #6a737d;"><span class="pl-c" style="box-sizing: border-box;">//</span> #1</span>
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>In main method; thread name is: <span class="pl-pds" style="box-sizing: border-box;">"</span></span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">+</span> <span class="pl-smi" style="box-sizing: border-box;">Thread</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>currentThread()<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>getName());
    }
}</pre>
</div>
a) The program results in a compiler error at statement #1. <br/> b) The program results in a runtime exception. <br/> c) The program prints the following: <br/>          In run method; thread name is: main <br/>          In main method; thread name is: main <br/> d) The program prints: <br/>          In the run method; the thread name is: thread-0 <br/>          In the main method; the thread name is: main</div><div dir="ltr" trbidi="on"><h2>Answer:</h2><div>c) The program prints the following:<br/>          In run method; thread name is: main<br/>          In main method; thread name is: main</div><h2>Explanation:</h2>The correct way to invoke a thread is to call the <i>start()</i> method on a Thread object. If you directly call the <i>run()</i> method, the method will run just like any other method (in other words, it will execute sequentially in the same thread without running as a separate thread). </div><div dir="ltr" trbidi="on"><h1 style="text-align: left;">12. Consider the following program and predict the output:</h1><div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; overflow-wrap: normal; overflow: auto; padding: 16px; word-break: normal;'><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">MyThread</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">implements</span> <span class="pl-e" style="box-sizing: border-box; color: #6f42c1;">Runnable</span> {

    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">@Override</span>
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">run</span>() {
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-smi" style="box-sizing: border-box;">Thread</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>currentThread()<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>getName());
    }
}

<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">ThreadTest</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">static</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">main</span>(<span class="pl-smi" style="box-sizing: border-box;">String</span> <span class="pl-v" style="box-sizing: border-box; color: #e36209;">arg</span>[]) {
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span> thread <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">=</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">Thread</span>(<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">MyThread</span>());
        thread<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>run();
        thread<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>run();
        thread<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>start();
    }
}</pre>
</div>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
a)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>main
main
Thread-0
</code></pre>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
b)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>Thread-0
main
Thread-1
</code></pre>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
c)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>main
Thread-0
Thread-1
</code></pre>
<div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
d)</div>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>Thread-0
Thread-1
Thread-2</code></pre>
<div dir="ltr" trbidi="on"><h2>Answer:</h2><div><div style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>a)</div><pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; color: #24292e; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; margin-bottom: 16px; overflow-wrap: normal; overflow: auto; padding: 16px;'><code style='background: initial; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; line-height: inherit; margin: 0px; overflow-wrap: normal; overflow: visible; padding: 0px; word-break: normal;'>main
main
Thread-0</code></pre></div><h2>Explanation:</h2></div>Calling <i>run()</i> directly will not create a new thread. The correct way is to call the <i>start()</i> method, which in turn will call the <i>run()</i> method in a new thread.<h1 style="text-align: left;">13. Consider the following program and choose the right option:
</h1><div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; overflow-wrap: normal; overflow: auto; padding: 16px; word-break: normal;'><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">MyThread</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">extends</span> <span class="pl-e" style="box-sizing: border-box; color: #6f42c1;">Thread</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">run</span>() {
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>Running<span class="pl-pds" style="box-sizing: border-box;">"</span></span>);
    }
}

<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">ThreadTest</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">static</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">main</span>(<span class="pl-smi" style="box-sizing: border-box;">String</span> <span class="pl-v" style="box-sizing: border-box; color: #e36209;">args</span>[]) <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">throws</span> <span class="pl-smi" style="box-sizing: border-box;">InterruptedException</span> {
        <span class="pl-smi" style="box-sizing: border-box;">Runnable</span> r <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">=</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">MyThread</span>(); <span class="pl-c" style="box-sizing: border-box; color: #6a737d;"><span class="pl-c" style="box-sizing: border-box;">//</span> #1</span>
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span> myThread <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">=</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">Thread</span>(r); <span class="pl-c" style="box-sizing: border-box; color: #6a737d;"><span class="pl-c" style="box-sizing: border-box;">//</span> #2</span>
        myThread<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>start();
    }
}</pre>
</div>
a) The program will result in a compilation error at statement #1. <br/> b) The program will result in a compilation error at statement #2. <br/> c) The program will compile with no errors and will print Running in the console. <br/> d) The program will compile with no errors but does not print any output in the console.</div><div dir="ltr" trbidi="on"><h2>Answer:</h2><div>c) The program will compile with no errors and will print Running in the console.</div><h2>Explanation:</h2>The class <i>Thread</i> implements the <i>Runnable</i> interface, so the assignment in statement #1 is valid. Also, you can create a new thread object by passing a <i>Runnable</i> reference to a <i>Thread</i> constructor, so statement #2 is also valid. Hence, the program will compile without errors and print Running in the console.<div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
</div>
<h1 style="text-align: left;">14. Consider the following program and choose the correct answer:</h1><div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; overflow-wrap: normal; overflow: auto; padding: 16px; word-break: normal;'><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">MyThread</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">extends</span> <span class="pl-e" style="box-sizing: border-box; color: #6f42c1;">Thread</span> {

    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">MyThread</span>(<span class="pl-smi" style="box-sizing: border-box;">String</span> <span class="pl-v" style="box-sizing: border-box; color: #e36209;">name</span>) {
        <span class="pl-c1" style="box-sizing: border-box; color: #005cc5;">this</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>setName(name);
    }

    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">@Override</span>
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">run</span>() {
        <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">try</span> {
            sleep(<span class="pl-c1" style="box-sizing: border-box; color: #005cc5;">100</span>);
        } <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">catch</span> (<span class="pl-smi" style="box-sizing: border-box;">InterruptedException</span> e) {
            e<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>printStackTrace();
        }
        play();
    }

    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">private</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">play</span>() {
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>print(getName());
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>print(getName());
    }
}

<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">ThreadTest</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">static</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">main</span>(<span class="pl-smi" style="box-sizing: border-box;">String</span> <span class="pl-v" style="box-sizing: border-box; color: #e36209;">args</span>[]) <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">throws</span> <span class="pl-smi" style="box-sizing: border-box;">InterruptedException</span> {
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span> tableThread <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">=</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">MyThread</span>(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>Table<span class="pl-pds" style="box-sizing: border-box;">"</span></span>);
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span> tennisThread <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">=</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">MyThread</span>(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>Tennis<span class="pl-pds" style="box-sizing: border-box;">"</span></span>);
        tableThread<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>start();
        tennisThread<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>start();
    }
}</pre>
</div>
a) This program will throw an IllegalStateException. <br/> b) This program will always print the following: Tennis Tennis Table Table. <br/> c) This program will always print the following: Table Table Tennis Tennis. <br/> d) The output of this program cannot be predicted; it depends on thread scheduling.</div><div dir="ltr" trbidi="on"><h2>Answer:</h2><div>d) The output of this program cannot be predicted; it depends on thread scheduling.</div><h2>Explanation:</h2></div><div dir="ltr" trbidi="on">Since the threads are not synchronized in this program, the output of this program cannot be determined. Depending on how the threads are scheduled, it may even generate output such as "Table Tennis Tennis Table".<br/><h1 style="text-align: left;">15. Which of the following state(s) is/are NOT legitimate thread state(s)? (Select all that apply.)</h1>a) NEW </div><div dir="ltr" trbidi="on">b) EXECUTING </div><div dir="ltr" trbidi="on">c) WAITING </div><div dir="ltr" trbidi="on">d) TERMINATED </div><div dir="ltr" trbidi="on">e) RUNNABLE</div><div dir="ltr" trbidi="on"><h2>Answer:</h2><div>b) EXECUTING </div><h2>Explanation:</h2></div><div dir="ltr" trbidi="on">A thread can be in one of the following states (as defined in the java.lang.Thread.State enumeration): NEW, RUNNABLE, BLOCKED, WAITING, TIMED_WAITING, and TERMINATED.</div><div dir="ltr" trbidi="on"><h1 style="text-align: left;">16. Consider the following program:</h1><div class="highlight highlight-source-java" style='background-color: white; box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; font-size: 16px; margin-bottom: 16px;'>
<pre style='background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; font-size: 13.6px; line-height: 1.45; overflow-wrap: normal; overflow: auto; padding: 16px; word-break: normal;'><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">Worker</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">extends</span> <span class="pl-e" style="box-sizing: border-box; color: #6f42c1;">Thread</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">@Override</span>
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">run</span>() {
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-smi" style="box-sizing: border-box;">Thread</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>currentThread()<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>getName());
    }
}

<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">class</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">Master</span> {
    <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">public</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">static</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">void</span> <span class="pl-en" style="box-sizing: border-box; color: #6f42c1;">main</span>(<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">String</span>[] <span class="pl-v" style="box-sizing: border-box; color: #e36209;">args</span>) <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">throws</span> <span class="pl-smi" style="box-sizing: border-box;">InterruptedException</span> {
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>currentThread()<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>setName(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>Master <span class="pl-pds" style="box-sizing: border-box;">"</span></span>);
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span> worker <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">=</span> <span class="pl-k" style="box-sizing: border-box; color: #d73a49;">new</span> <span class="pl-smi" style="box-sizing: border-box;">Worker</span>();
        worker<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>setName(<span class="pl-s" style="box-sizing: border-box; color: #032f62;"><span class="pl-pds" style="box-sizing: border-box;">"</span>Worker <span class="pl-pds" style="box-sizing: border-box;">"</span></span>);
        worker<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>start();
        <span class="pl-smi" style="box-sizing: border-box;">Thread</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>currentThread()<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>join();
        <span class="pl-smi" style="box-sizing: border-box;">System</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>out<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>println(<span class="pl-smi" style="box-sizing: border-box;">Thread</span><span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>currentThread()<span class="pl-k" style="box-sizing: border-box; color: #d73a49;">.</span>getName());
    }
}</pre>
</div>
<b>Which one of the following options correctly describes the behavior of this program? </b><br/> a) When executed, the program prints the following: Worker Master . <br/> b) When executed, the program prints Worker , and after that the program hangs (i.e., does not terminate). <br/> c) When executed, the program prints Worker  and then terminates. <br/> d) When executed, the program throws an IllegalMonitorStateException. <br/> e) The program does not compile and fails with multiple compiler errors.</div><div dir="ltr" trbidi="on"><h2>Answer:</h2><div>b) When executed, the program prints Worker , and after that the program hangs (i.e., does not terminate).</div><h2>Explanation:</h2></div><div dir="ltr" trbidi="on">The statement <i>Thread.currentThread()</i> in the <i>main()</i> method refers to the Master thread. Calling the <i>join()</i> method on itself means that the thread waits for itself to complete, which would never happen, so this program hangs (and does not terminate).</div><div dir="ltr" trbidi="on">
<h1>Conclusion</h1><div>Java <a href="https://www.javaguides.net/p/java-multithreading-utorial.html" target="_blank">Multithreading</a> enables the concurrent execution of multiple threads, offering benefits such as increased program performance and efficient utilization of system resources. By understanding the concepts and features of Java <a href="https://www.javaguides.net/p/java-multithreading-utorial.html" target="_blank">Multithreading</a>, you can develop applications that effectively leverage parallelism and improve overall responsiveness. </div><div><div dir="ltr" trbidi="on"><div dir="ltr" trbidi="on"><p>Learn and Master Java Programming: <a href="https://www.javaguides.net/p/java-tutorial-learn-java-programming.html" target="_blank">Learn Java Programming with Examples</a></p><p><span face='-apple-system, "system-ui", "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"' style="background-color: white; font-size: 16px;"></span></p><p><span face='-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"' style="background-color: white; font-size: 16px;"></span></p><p><span face='-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"' style="background-color: white;"></span></p><p>Check out 100+ quiz questions: <a href="https://www.javaguides.net/p/java-daily-quiz.html" target="_blank">100+ Quiz Questions to Test Your Java, Spring Boot, Microservices, Hibernate, REST API Skills</a></p></div></div></div><div>Keep exploring and practicing <a href="https://www.javaguides.net/p/java-multithreading-utorial.html" target="_blank">Multithreading</a> techniques to enhance your Java programming skills.</div></div>
<h1> Related Posts </h1>
<ol>
<li><a href="https://www.javaguides.net/2020/12/ava-string-quiz-multiple-choice-questions.html" target="_blank">Java String Quiz</a></li>
<li><a href="https://www.javaguides.net/2021/10/java-arrays-quiz-multiple-choice.html" target="_blank">Java Arrays Quiz</a></li>
<li><a href="https://www.javaguides.net/2021/10/java-loops-quiz-multiple-choice.html" target="_blank">Java Loops Quiz</a></li>
<li><a href="https://www.javaguides.net/2020/04/java-oops-quiz-coding-programs.html" target="_blank">Java OOPS Quiz</a></li>
<li><a href="https://www.javaguides.net/2020/03/java-oops-quiz-java-interview-oops-programs.html" target="_blank">Java OOPS Quiz - Part 1</a></li>
<li><a href="https://www.javaguides.net/2020/03/java-oops-quiz-java-interview-oops-programs-part2.html" target="_blank">Java OOPS Quiz - Part 2</a></li>
<li><a href="https://www.javaguides.net/2020/12/java-exception-handling-quiz-multiple-choice-questions.html" target="_blank">Java Exception Handling Quiz</a></li>
<li><a href="https://www.sourcecodeexamples.net/2021/11/java-collections-quiz-mcq-multiple-choice-questions.html" target="_blank">Java Collections Quiz</a></li>
<li><a href="https://www.sourcecodeexamples.net/2021/11/java-generics-quiz-mcq-multiple-choice-questions.html" target="_blank">Java Generics Quiz</a></li>
<li><a href="https://www.javaguides.net/2020/04/jdbc-quiz-multiple-choice-questions.html" target="_blank">JDBC Quiz</a></li>
<li><a href="https://www.sourcecodeexamples.net/2021/11/java-lambda-expressions-quiz-mcq.html" target="_blank">Java Lambda Expressions Quiz</a></li>
<li><a href="https://www.sourcecodeexamples.net/2021/11/java-functional-interfaces-quiz-mcq.html" target="_blank">Java Functional Interfaces Quiz</a></li>
<li><a href="https://www.sourcecodeexamples.net/2021/11/java-streams-api-quiz-mcq.html" target="_blank">Java Streams API Quiz</a></li>
<li><a href="https://www.sourcecodeexamples.net/2021/11/java-date-time-quiz-mcq-multiple-choice-questions.html" target="_blank">Java Date Time Quiz</a></li>
<li><a href="https://www.javaguides.net/2021/11/java-8-quiz-mcq-multiple-choice-questions.html" target="_blank">Java 8 Quiz</a></li>
</ol></div>
<span class="post-label byline post-labels">
<div>
<h1 class="label-heading"> Related Quizzes: </h1>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/core-java-mcq.html" target="_blank">Core Java Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/p/java-daily-quiz.html" target="_blank">Java (1K+ Quiz Questions)</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/java-coding-quiz-multiple-choice.html" target="_blank">Java Coding Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2021/11/java-8-quiz-mcq-multiple-choice-questions.html" target="_blank">Java 8 Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/data-structures-and-algorithms-quiz.html" target="_blank">DSA Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/java-oops-concepts-quiz-multiple-choice.html" target="_blank">Java OOPS Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/jsp-quiz-mcq-multiple-choice-questions.html" target="_blank">JSP Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/servlet-quiz-mcq-multiple-choice.html" target="_blank">Servlet Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/hibernate-quiz-mcq-multiple-choice-questions.html" target="_blank">Hibernate Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/jpa-quiz-mcq-multiple-choice-questions.html" target="_blank">JPA Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/08/maven-quiz-mcq-multiple-choice-questions.html" target="_blank">Start Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/design-patterns-quiz.html" target="_blank">Design Patterns Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2022/06/rest-api-quiz-multiple-choice-questions.html" target="_blank">REST API Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/json-quiz.html" target="_blank">JSON Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/xml-quiz.html" target="_blank">XML Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/01/spring-boot-quiz-multiple-choice-questions.html" target="_blank">Spring Boot Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/01/spring-quiz-mcq-multiple-choice.html" target="_blank">Spring Framework Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/01/microservices-quiz-mcq-multiple-choice.html" target="_blank">Microservices Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/spring-mvc-quiz.html" target="_blank">Spring MVC Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/spring-data-jpa-quiz.html" target="_blank">Spring Data JPA Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/spring-cloud-quiz.html" target="_blank">Spring Cloud Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-security-quiz.html" target="_blank">Spring Security Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-testing-quiz.html" target="_blank">Spring Testing Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-aop-mcq.html" target="_blank">Spring AOP Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-jdbc-mcq.html" target="_blank">Spring JDBC Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-messaging-mcq.html" target="_blank">Spring Messaging Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-data-mcq.html" target="_blank">Spring Data Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-webflux-mcq.html" target="_blank">Spring WebFlux Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/spring-batch-mcq.html" target="_blank">Spring Batch Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/javascript-quiz.html" target="_blank">JavaScript Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/javascript-coding-quiz-multiple-choice.html" target="_blank">JavaScript Coding Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/react-js-quiz-multiple-choice-questions.html" target="_blank">React JS Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/angular-quiz.html" target="_blank">Angular Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/node-js-quiz-mcq-multiple-choice.html" target="_blank">Node JS Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/jquery-quiz.html" target="_blank">JQuery Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/vuejs-quiz.html" target="_blank">VueJS Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/typescript-quiz.html" target="_blank">TypeScript Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/expressjs-quiz.html" target="_blank">Express.js Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/sql-quiz.html" target="_blank">SQL Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/dbms-quiz.html" target="_blank">DBMS Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/mysql-quiz.html" target="_blank">MySQL Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/postgresql-quiz.html" target="_blank">PostgreSQL Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/mongodb-quiz.html" target="_blank">MongoDB Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/docker-quiz.html" target="_blank">Docker Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/git-quiz.html" target="_blank">Git Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/07/kotlin-quiz.html" target="_blank">Kotlin Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/software-engineering-quiz.html" target="_blank">Software Engineering Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/operating-system-quiz.html" target="_blank">Operating System Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/computer-network-quiz.html" target="_blank">Computer Network Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/linux-quiz.html" target="_blank">Linux Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/computer-fundamental-quiz.html" target="_blank">Computer Fundamentals Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/rabbitmq-quiz.html" target="_blank">RabbitMQ Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/apache-kafka-quiz.html" target="_blank">Apache Kafka Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/devops-quiz-multiple-choice-questions.html" target="_blank">DevOps Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/hadoop-quiz.html" target="_blank">Hadoop Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/09/unix-quiz.html" target="_blank">Unix Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2023/10/junit-mcq.html" target="_blank">JUnit Quiz Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/2024/01/java-coding-questions-and-answers.html" target="_blank">Java Coding Quiz</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/p/python-quizzes.html" target="_blank">Top 100+ Python Quizzes</a>
<a class="quiz-related-posts" href="https://www.javaguides.net/p/cpp-quizzes.html" target="_blank">Top C++ Quizzes</a>
</div>
</span>
<script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle" data-ad-client="ca-pub-5573295123036731" data-ad-format="autorelaxed" data-ad-slot="5199263398" style="display:block"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>