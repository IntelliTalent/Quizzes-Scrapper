[
    {
        "question": "From what distribution does the `rand()` function return value?",
        "options": [
            "normal",
            "poisson",
            "binomial",
            "uniform"
        ],
        "answer": "uniform"
    },
    {
        "question": "Based on the code below, c is the \\_ of a.",
        "options": [
            "median",
            "mode",
            "mean",
            "margin"
        ],
        "answer": "median"
    },
    {
        "question": "What does the Profiler track?",
        "options": [
            "execution time",
            "command history",
            "errors",
            "the value of variables"
        ],
        "answer": "execution time"
    },
    {
        "question": "Which code block contains the correct syntax for a `while` loop?",
        "options": [
            "A",
            "B",
            "C",
            "D"
        ],
        "answer": "D"
    },
    {
        "question": "What does `b` contain?",
        "options": [
            "A",
            "B"
        ],
        "answer": "A"
    },
    {
        "question": "You have written a function `myfun` and want to measure how long it takes to run. Which code segment will return in `t` the time in seconds it takes `myfun` to run?",
        "options": [
            "A",
            "A",
            "C",
            "D"
        ],
        "answer": "A"
    },
    {
        "question": "What is `%%` used for?",
        "options": [
            "argument placeholder",
            "block quotes",
            "code sections",
            "conversion specifier"
        ],
        "answer": "code sections"
    },
    {
        "question": "what is the `.` character NOT used for?",
        "options": [
            "structure field access",
            "a decimal point",
            "cell array access",
            "element-wise operations"
        ],
        "answer": "cell array access"
    },
    {
        "question": "Which function could you use for multiple linear regression?",
        "options": [
            "polyval",
            "regress",
            "solve",
            "polyfit"
        ],
        "answer": "regress"
    },
    {
        "question": "For which of these arrays do `mean`, `median`, and `mode` return the same value?",
        "options": [
            "[0 1 1 1 2]",
            "[1 3 5 5 6]",
            "[0 1 1 1 1]",
            "[0 0 5 5 5]"
        ],
        "answer": "[0 1 1 1 2]"
    },
    {
        "question": "You are in the middle of a long MATLAB session where you have performed many analyses and made many plots. You run the following commands, yet a figure window doesn't pop up on the top of your screen with your plot. What might be the issue?",
        "options": [
            "Your plot doesn't plot in a figure window because `figure` was not called immediately in advance.",
            "Your `plot` syntax is incorrect.",
            "Your plot is in a figure window that was already open, hidden behind other windows on your screen.",
            "Your plot was saved to an image file but not displayed."
        ],
        "answer": "Your plot is in a figure window that was already open, hidden behind other windows on your screen."
    },
    {
        "question": "How do you access the value for the field `name` in structure S?",
        "options": [
            "S['name']",
            "S.name",
            "S('name')",
            "S{'name'}"
        ],
        "answer": "S.name"
    },
    {
        "question": "What built-in definition does i have?",
        "options": [
            "basic imaginary unit",
            "index function",
            "infinity",
            "index variable"
        ],
        "answer": "basic imaginary unit"
    },
    {
        "question": "Which statement is equivalent to this for loop?",
        "options": [
            "b = a\\*a;",
            "b = a.^2;",
            "b = a^2;",
            "b = pow2(a);"
        ],
        "answer": "b = a.^2;"
    },
    {
        "question": "You have plotted values of cosine from -10 to 10 and want to change the x-axis tick marks to every pi, from -3*pi to 3*pi. Which statement will do that?",
        "options": [
            "xticks(-3*pi:3.14:3*pi)",
            "xticks(-3*pi:pi:3*pi)",
            "xticks(linespace(-3*pi(), 3*pi(), pi()))",
            "xticks(linespace(-3*pi, 3*pi, pi)"
        ],
        "answer": "xticks(-3*pi:pi:3*pi)"
    },
    {
        "question": "What is the value of `c`?",
        "options": [
            "[-1 2 -1]",
            "[1 3 6 5 3]",
            "6",
            "[1 -2 1]"
        ],
        "answer": "[1 3 6 5 3]"
    },
    {
        "question": "Which function CANNOT be used to randomly sample data?",
        "options": [
            "datasample",
            "randi",
            "resample",
            "randperm"
        ],
        "answer": "resample"
    },
    {
        "question": "Which choice is correct syntax for a `switch` statement?",
        "options": [
            "A",
            "B",
            "C",
            "D"
        ],
        "answer": "A"
    },
    {
        "question": "What is the result of this code?",
        "options": [
            "Error",
            "B",
            "C",
            "D"
        ],
        "answer": "C"
    },
    {
        "question": "What is true of a handle class object?",
        "options": [
            "When you pass a handle object to a function, a new object is made that is independent of the original.",
            "All copies of handle objects refer to the same underlying object.",
            "Handle object cannot reference one another.",
            "Handle object do not have a default `eq` function."
        ],
        "answer": "All copies of handle objects refer to the same underlying object."
    },
    {
        "question": "Which choice has a different final result in `f10` than the other three?",
        "options": [
            "A",
            "B",
            "C",
            "D"
        ],
        "answer": "C"
    },
    {
        "question": "Which choice will NOT give you a 5 x 5 identity matrix?",
        "options": [
            "A",
            "B",
            "C",
            "D"
        ],
        "answer": "C"
    },
    {
        "question": "Which statement creates this structure?",
        "options": [
            "A",
            "B",
            "C",
            "D"
        ],
        "answer": "B"
    },
    {
        "question": "`my_func` is a function as follows. What is the value of `a` at the end of the code beneath?",
        "options": [
            "4",
            "3",
            "0",
            "1"
        ],
        "answer": "1"
    },
    {
        "question": "Which statement could create this cell array?",
        "options": [
            "c = `{\"hello world\" {\"hello\"} \"goodbye\" [1 2 ]};`",
            "c = `{\"hello world\" {\"hello\"} \"goodbye\" {[1 2 3]}};`",
            "c = `{\"hello world\" {\"hello\"} \"goodbye\" [1 2 3]};`",
            "c = `{\"hello world\" {\"hello\" \"hello\"} \"goodbye\" {[1 2 3]}};`"
        ],
        "answer": "c = `{\"hello world\" {\"hello\"} \"goodbye\" [1 2 3]};`"
    },
    {
        "question": "Which choice adds `b` to each row of `a`?",
        "options": [
            "a = a + reshape(b, 4, 1);",
            "a = a + b';",
            "a = a + repmat(b, 4, 1);",
            "a = a + [b b b b];"
        ],
        "answer": "a = a + repmat(b, 4, 1);"
    },
    {
        "question": "Which choice replaces all `a`s with `o`s?",
        "options": [
            "A",
            "B",
            "C",
            "D"
        ],
        "answer": "C"
    },
    {
        "question": "Which statement returns the roots for the polynomial `x^2 + 2x - 4`?",
        "options": [
            "poly([1 2 -4])",
            "solve(x^2 + 2x - 4 == 0)",
            "polyfit(x^2 + 2x - 4 == 0)",
            "roots([1 2 -4])"
        ],
        "answer": "roots([1 2 -4])"
    },
    {
        "question": "Which choice is the proper syntax to append a new elements `a` to the end of 1x 2 dimensional cell array `C`?",
        "options": [
            "C = {C a};",
            "C = cellcat(C a)",
            "C = cat(2, {a}, C)",
            "C{end+1}=a"
        ],
        "answer": "C{end+1}=a"
    },
    {
        "question": "You have loaded a dataset of people's heights into a 100 x 1 array called `height`. Which statement will return a 100 x 1 array, `sim_height`, with values from a normal distribution with the same mean and variance as your height data?",
        "options": [
            "sim_height = std(height) + mean(height) \\* randn(100, 1);",
            "sim_height = mean(height) + std(height) \\* randn(100, 1);",
            "sim_height = randn(std(height), mean(height), [100, 1]);",
            "sim_height = randn(mean(height), std(height), [100, 1]);"
        ],
        "answer": "sim_height = mean(height) + std(height) \\* randn(100, 1);"
    },
    {
        "question": "Which statement returns a cell array of the strings containing '`burger`' from `menu`?",
        "options": [
            "menu{strfind(menu, 'burger')}",
            "menu(strfind(menu, 'burger'))",
            "menu{contains(menu, 'burger')}",
            "menu(contains(menu, 'burger'))"
        ],
        "answer": "menu(contains(menu, 'burger'))"
    },
    {
        "question": "What is the set of possible values that `a` may contain?",
        "options": [
            "3, 4, 5, 6, 7, 8, 9, 10, 11, 12",
            "1, 2, 12",
            "2, 11, 12",
            "1, 12"
        ],
        "answer": "1, 2, 12"
    },
    {
        "question": "Which statement is true about the sparse matrices?",
        "options": [
            "You can use the `sparse` function to remove empty cells from cell array variables.",
            "Sparse matrices always use less memory than their associated full matrices.",
            "Mixtures of sparse and full matrices can be combined in all of MATLAB's built-in arithmetic operations.",
            "The `sparse` function requires its input to be a full matrix with at least 50% zero elements."
        ],
        "answer": "Sparse matrices always use less memory than their associated full matrices."
    },
    {
        "question": "Which statement using logical indices will result in an error?",
        "options": [
            "b = a(a ~= 11)",
            "b = a(a == 1)",
            "b = a(a>6 && a<9)",
            "b = a(a | 1)"
        ],
        "answer": "b = a(a>6 && a<9)"
    },
    {
        "question": "Which statement turns `menu` into the variable `menu_string` below?",
        "options": [
            "menu_string = cell2mat(join(menu, newline))",
            "menu_string = cell2mat(join(menu, '\\n'))",
            "menu_string = join(menu, newline)",
            "menu_string = cell2mat(pad(menu))"
        ],
        "answer": "menu_string = cell2mat(join(menu, newline))"
    },
    {
        "question": "Which code snippet sets a new random seed based on the current time and saves the current settings of the random number generator?",
        "options": [
            "`rng_settings_curr = rng('shuffle');`",
            "B",
            "C",
            "D"
        ],
        "answer": "`rng_settings_curr = rng('shuffle');`"
    },
    {
        "question": "You have a matrix `data` in which each column is mono audio recording from a room in your house. You've noticed that each column has a very different mean and when you plot them all on the same graph, the spread across the y axis make it impossible to see anything. You want to subtract the mean from each column. Which code block will accomplish this?",
        "options": [
            "`data_nomean = data - repmat(median(data), size(data, 1), 1);`",
            "`data_nomean = bsxfun(@minus, data, mean(data));`",
            ".",
            "."
        ],
        "answer": "`data_nomean = bsxfun(@minus, data, mean(data));`"
    },
    {
        "question": "Which code block results in an array `b` containing the mean values of each array within `C`?",
        "options": [
            ".",
            ".",
            ".",
            "."
        ],
        "answer": "."
    },
    {
        "question": "Which statement creates a logical array that is 1 if the element in `passwords` contains a digit and 0 if it does not?",
        "options": [
            "contains(password, '\\d')",
            "~isempty(regexp(passwords, '\\d'))",
            "cellfun(@(x) ~isempty(regexp(x, '\\d')), passwords)",
            "regexp(passwords, '\\d')"
        ],
        "answer": "cellfun(@(x) ~isempty(regexp(x, '\\d')), passwords)"
    },
    {
        "question": "Which is NOT a function that adds text to a plot?",
        "options": [
            "title",
            "text",
            "label",
            "legend"
        ],
        "answer": "label"
    },
    {
        "question": "Which code block most likely produced this graph?",
        "options": [
            "&shy;",
            "&shy;"
        ],
        "answer": "&shy;"
    },
    {
        "question": "What kind of files are stored with the .mat extension?",
        "options": [
            "figure files",
            "script files",
            "function files",
            "stored variable files"
        ],
        "answer": "stored variable files"
    },
    {
        "question": "You would like to randomly reorder every element in array a and put the result into another array b. Which code is NOT necessary to do that?",
        "options": [
            ":",
            ":",
            ":",
            ":"
        ],
        "answer": ":"
    },
    {
        "question": "Which statement returns **1** (true)?",
        "options": [
            "a == b",
            "ischar(b)",
            "length(a) == length(b)",
            "class(a) == class(b)"
        ],
        "answer": "a == b"
    },
    {
        "question": "Which does E contain?",
        "options": [
            "E = {'cat'} {'dog'}",
            "E = {'mouse'}",
            "E = {'cat'} {'cow'} {'dog'} {'piranha'}",
            "E ="
        ],
        "answer": "E = {'cat'} {'dog'}"
    },
    {
        "question": "Where in the UI can you see what variables have been created, their values, and their class?",
        "options": [
            "Editor",
            "command window",
            "details",
            "workspace"
        ],
        "answer": "workspace"
    },
    {
        "question": "Given the following x and y coordinates, which choice calculates a linear regression for the x and y coordinates, and which plots the points of the x,y data and the regression line on the same graph?",
        "options": [
            ":",
            ":",
            ":",
            ":"
        ],
        "answer": ":"
    },
    {
        "question": "If you run this piece of code, you will get an error. Why?",
        "options": [
            "You are attempting to multiply a non-square matrix by itself, causing a dimension mismatch.",
            "MATLAB does not allow you to square all the elements in the matrix in a single operation.",
            "You must use the \\*\\* operator instead of the ^ operator.",
            "You cannot square matrices that have a 0 as the first element."
        ],
        "answer": "You are attempting to multiply a non-square matrix by itself, causing a dimension mismatch."
    },
    {
        "question": "Which command will create a 10-element vector v with values from 1 to 10?",
        "options": [
            "v = {1:10}",
            "v = [1-10]",
            "v = 1:10",
            "v = (10)"
        ],
        "answer": "v = 1:10"
    },
    {
        "question": "For a 5 x 5 array, the two subscript index (4,2) indexes the same location as linear index `___`.",
        "options": [
            "7",
            "8",
            "17",
            "9"
        ],
        "answer": "9"
    },
    {
        "question": "What is a difference between global variable and persistent variables?",
        "options": [
            "Global variables have a higher performance overhead than persistent variables.",
            "Global variables remain in memory after clear all; persistent variables do not.",
            "Global variables can be used to cache data in memory; persistent variables cannot.",
            "Global variables are accessible outside the function scope; persistent variables are not."
        ],
        "answer": "Global variables are accessible outside the function scope; persistent variables are not."
    },
    {
        "question": "How is the random seed for MATLAB's random number generator first initializedin a MATLAB Session?",
        "options": [
            "Seed is undefined until it is initialized by the user.",
            "Seed is set to a value based on the current time when user first calls rand()",
            "Seed is set to a value based on the current time on startup.",
            "Seed is set to a static default value on startup."
        ],
        "answer": "Seed is set to a static default value on startup."
    },
    {
        "question": "At what will MATLAB look first for a called function?",
        "options": [
            "functions on the path",
            "built-in functions",
            "functions within the current file",
            "functions within the current directory"
        ],
        "answer": "functions within the current directory"
    },
    {
        "question": "Which choice is the correct syntax for declaring a function that returns the input value as the output?",
        "options": [
            ":",
            ":",
            ":",
            ":"
        ],
        "answer": ":"
    },
    {
        "question": "What is the state of a at the end of this code?",
        "options": [
            ":",
            ":",
            ":",
            ":"
        ],
        "answer": ":"
    },
    {
        "question": "You've just plotted some data and want to change the color behind the lines you've plotted to black. Which code block will accomplish this?",
        "options": [
            "`h_f = figure; set(h_f,'Color', [0 0 0]);`",
            "`h_a = gca; set(h_a,'Color', [0 0 0]);`",
            "`h_a = axes; set(h_a,'Color', [0 0 0]);`",
            "`h_f = gcf; set(h_a,'Color', [0 0 0]);`"
        ],
        "answer": "`h_a = gca; set(h_a,'Color', [0 0 0]);`"
    },
    {
        "question": "Which statement will return all the odd numbers from 1 to 9?",
        "options": [
            "`2*[1:5]+1`",
            "`1:2:9`",
            "`isodd(1:9)`",
            "`1:odd:9`"
        ],
        "answer": "`1:2:9`"
    },
    {
        "question": "In MATLAB, the `imfilter` command performs a convolution operation between an image and a matrix. Suppose you have an image loaded in MATLAB into the variable `img` and you apply the following code. The original image appears slightly blurred because the convolution smoothed out the image (removed noise). Why do you think this happened?",
        "options": [
            "`h` is a Gaussian filter that adds to 1. Its intended effect is to highlight image edges.",
            "`h` is an averaging filter uniformly distributed that adds to 1. Its intended effect is to smooth out images (remove noise).",
            "`h` is a Laplacian filter that adds up to 0. Its intended effect is to smooth out images (remove noise).",
            "`imfilter` is a function that always blurs the images."
        ],
        "answer": "`h` is an averaging filter uniformly distributed that adds to 1. Its intended effect is to smooth out images (remove noise)."
    },
    {
        "question": "What is the size of `b`?",
        "options": [
            "1x3",
            "3x2",
            "2x3",
            "2x9"
        ],
        "answer": "2x9"
    },
    {
        "question": "Which statement reverses vector `a`?",
        "options": [
            "reverse(a)",
            "a(end:- 1:1)",
            "rev(a)",
            "a(::-1)"
        ],
        "answer": "a(end:- 1:1)"
    },
    {
        "question": "Which command will create a column vector with the values 7, 8, and 9?",
        "options": [
            "`c = [7,8,9]`",
            "`c = [7: 8: 9]`",
            "`c = [7; 8; 9]`",
            "`c = [7 8 9]`"
        ],
        "answer": "`c = [7; 8; 9]`"
    },
    {
        "question": "What do you call in the **command** window to see all the variables in the workspace and their classes?",
        "options": [
            "`who`",
            "`vars`",
            "`whos`",
            "`who all`"
        ],
        "answer": "`whos`"
    },
    {
        "question": "You wrote a new function named `snap` in an m-file and when you call it, you're not getting the output you expect. You previously wrote a different function named `snap`, which you think might also be on the search path. Which command can you use to see if the old `snap` function is being called?",
        "options": [
            "which",
            "who",
            "lookfor",
            "what"
        ],
        "answer": "which"
    },
    {
        "question": "What is a reason to save a MAT-file using the `-v7.3` flag?",
        "options": [
            "to ensure backward compatibility",
            "to avoid HDF5 overhead in MAT-file",
            "to include a variable greater that 2GB",
            "to use compression by default"
        ],
        "answer": "to include a variable greater that 2GB"
    },
    {
        "question": "Which choice cannot add a directory to the search path?",
        "options": [
            "the **path** function",
            "the **savepath** function",
            "using **Set Path** in the **Environment** menu",
            "the **addpath** function"
        ],
        "answer": "the **savepath** function"
    },
    {
        "question": "Which is not a function to plot three-dimensional data?",
        "options": [
            "mesh",
            "surf",
            "contour",
            "grid"
        ],
        "answer": "grid"
    },
    {
        "question": "What is the reason to save a MAT-file using the v-7.3 flag?",
        "options": [
            "to use compression by default",
            "to ensure backward compatibility",
            "to include a variable greater than 2GB",
            "to avoid HDF5 overhead in MAT-file"
        ],
        "answer": "to include a variable greater than 2GB"
    },
    {
        "question": "This graph could be the result of which block of code?",
        "options": [
            "`a = randn(1,1000); histogram(a) ylabel('counts')`",
            "`a = rand(1,1000); histogram(a) ylabel('counts')`",
            "`a = randi(1,1000); histogram(a) ylabel('counts')`",
            "`a = rng(1,1000); histogram(a) ylabel('counts')`"
        ],
        "answer": "`a = randn(1,1000); histogram(a) ylabel('counts')`"
    },
    {
        "question": "What is a key difference between && and &?",
        "options": [
            "&& is a logical operator and & is not.",
            "&& is always slower than &",
            "&& employs short-circuiting behavior and & does not.",
            "&& is a bitwise operator and & is not."
        ],
        "answer": "&& employs short-circuiting behavior and & does not."
    },
    {
        "question": "What is the result of this code?",
        "options": [
            "\"abxd\"",
            "abxd",
            "a 1x 3 string array",
            "a run-time error"
        ],
        "answer": "a 1x 3 string array"
    },
    {
        "question": "In which case would you use varargin in a function you write?",
        "options": [
            "You want to count the number of input arguments.",
            "You want to include optional input arguments.",
            "You want the workspace variable names of the input arguments.",
            "You want the data types of the input arguments."
        ],
        "answer": "You want to include optional input arguments."
    },
    {
        "question": "What does e contain?",
        "options": [
            "`e = [0 0 1 9 8 0]`",
            "`e = [9 8 0 0 0 1]`",
            "`e = [0 1 8 9]`",
            "`e = [1 8 9]`"
        ],
        "answer": "`e = [0 1 8 9]`"
    },
    {
        "question": "What does this function print?",
        "options": [
            ":",
            ":",
            ":",
            ":"
        ],
        "answer": ":"
    },
    {
        "question": "You are debugging a function and have set a breaipoint on the line before the error occurs. You look at the variable values and suspect the cause of the error is that a is 9 but should be 10. The next statement after the breakpoint will use a. Wigh action would help you test if a=10 solves the problem?",
        "options": [
            "type \"a=10;\" into the function file, before the statement that's throwing an error. Then click the Run button in the debugger window.",
            "Type \"a=10; continue;\" into the command window",
            "Type \"a=10;\" into the command window. Then click the Run button in the debugger window",
            "Type \"a=10;\" into the function file, before the statement that's throwing an error. Then type \"return;\" into the command window"
        ],
        "answer": "type \"a=10;\" into the function file, before the statement that's throwing an error. Then click the Run button in the debugger window."
    },
    {
        "question": "Which statement returns the character array 'alone'?",
        "options": [
            "b(7:11)",
            "b(2)",
            "b(6:end)",
            "b(1,2)"
        ],
        "answer": "b(6:end)"
    },
    {
        "question": "Which statement returns the character array 'alone'?",
        "options": [
            ":",
            ":",
            ":",
            ":"
        ],
        "answer": null
    },
    {
        "question": "Which choice uses the proper syntax for an `if else` statement?",
        "options": [
            ":",
            ":",
            ":",
            ":"
        ],
        "answer": ":"
    },
    {
        "question": "What does b contain?",
        "options": [
            "`b = [1 6 8 9 19]`",
            "`b = [1 6 8 9]`",
            "`b = [1 6 6 6 8 8 9 9 19 19]`",
            "`b = [1 6 6 8 8 9]`"
        ],
        "answer": "`b = [1 6 8 9 19]`",
        "explanation": null,
        "codeblock": null
    }
]