[
    {
        "question": "Mid level generation design techniques are classified into which of the following?",
        "options": [
            "a) Creational Techniques",
            "b) Transitional Techniques",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "c",
        "explanation": "Mid level generation design techniques are classified as creational, transitional techniques."
    },
    {
        "question": "Which of the following can be considered true?",
        "options": [
            "a) Make a mid-level design model from scratch is for transformational technique",
            "b) Change another model into a mid-level design mode is for Creational technique",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "d",
        "explanation": "Make a mid-level design model from scratch is for Creational technique and Change another model into a mid-level design mode is for Transformational technique."
    },
    {
        "question": "What does Design Theme means in general?",
        "options": [
            "a) Important problem",
            "b) Concern and Issues",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "c",
        "explanation": "Design Theme means in general Important problem, Concern and issues related to the problem."
    },
    {
        "question": "Why does designers look for candidate classes?",
        "options": [
            "a) To model entities in charge of or involved in program tasks",
            "b) To model things in the world that interact directly with the program",
            "c) To model structures and collections of objects",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "Designers look for candidate classes to model entities in charge of or involved in program tasks,  things in the world that interact directly with the program,  structures and collections of objects."
    },
    {
        "question": "After generating candidate classes,  designers evaluate them and choose the best ones to include in the model using the which of the following heuristics?",
        "options": [
            "a) Discard candidates with vague names or murky responsibilities",
            "b) Discard candidates that do something out of scope",
            "c) Apply design patterns where appropriate",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "The following heuristics are involved Discard candidates with vague names or murky responsibilities,  Discard candidates that do something out of scope."
    },
    {
        "question": "The next step is to evaluate the class diagram to check that all candidate classes are present and that the diagram reflects their descriptions, Designers apply which of the following heuristics to this activity?",
        "options": [
            "a) Check each class for important but overlooked attributes,  operations,  or associations",
            "b) Discard candidates that do something out of scope",
            "c) Apply design patterns were not appropriate",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "Designers apply the following heuristics to this activity Check each class for important but overlooked attributes,  operations,  or associations and Apply design patterns where appropriate."
    },
    {
        "question": "Which of the following is referred for the conceptual modelling?",
        "options": [
            "a) Change actors to interface classes",
            "b) Add actor domain classes",
            "c) Convert or add controllers and coordinators",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "All of the following is referred for the conceptual modelling."
    },
    {
        "question": "Which of these are class diagram generation heuristics?",
        "options": [
            "a) Add classes for data types",
            "b) Convert or add container classes",
            "c) Convert or add engineering design relationships",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "All of the mentioned steps are the heuristics for class diagram generation."
    },
    {
        "question": "Which of these steps are followed for Generating Classes from Themes?",
        "options": [
            "a) Look for entities in charge of program tasks",
            "b) Rework candidate classes with overlapping responsibilities to divide their responsibilities cleanly",
            "c) Look for things about which the program stores data",
            "d) Look for entities in charge of program tasks, Look for things about which the program stores data"
        ],
        "answer": "d",
        "explanation": "Generating Classes from Themes follows -Look for entities in charge of program tasks, Look for things about which the program stores data."
    },
    {
        "question": "Which of the following is followed for Evaluating and Selecting Candidate Classes?",
        "options": [
            "a) Discard classes with vague names or murky responsibilities",
            "b) Discard classes will not do something out of scope",
            "c) Look for actors",
            "d) All of the mentioned"
        ],
        "answer": "a",
        "explanation": "Evaluating and Selecting Candidate Classes follows- Discard classes with vague names or murky responsibilities,  Discard classes that do something out of scope."
    }
]