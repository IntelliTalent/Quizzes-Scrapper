[
    {
        "question": "Select the type of multitasking methods that exist:",
        "options": [
            "a) process based",
            "b) thread based",
            "c) only process",
            "d) both process & thread based"
        ],
        "answer": "d",
        "explanation": "There are two distinct types of multitasking: process-based and thread-based."
    },
    {
        "question": "Choose the correct statement about process-based multitasking.",
        "options": [
            "a) A feature that allows our computer to run two or more programs concurrently",
            "b) A program that acts as a small unit of code that can be dispatched by the scheduler",
            "c) Only A program that acts as a small unit of code that can be dispatched by the scheduler",
            "d) Both A feature that allows our computer to run two or more programs concurrently & A program that acts as a small unit of code that can be dispatched by the scheduler"
        ],
        "answer": "d",
        "explanation": "The process-based multitasking is the feature that allows your computer to run two or more programs concurrently. For example, process-based multitasking allows you to run a word processor at the same time you are using a spreadsheet or browsing the Internet. In process-based multitasking, a program is the smallest unit of code that can be dispatched by the scheduler."
    },
    {
        "question": "Choose the statements which indicate the differences between the thread based multitasking and process based multitasking.",
        "options": [
            "a) Process-based multitasking handles the concurrent execution of programs",
            "b) Process-based multitasking handles the concurrent execution of pieces of the same program",
            "c) Thread-based multitasking handles the concurrent execution of programs",
            "d) Thread-based multitasking deals with the concurrent execution of pieces of the same program"
        ],
        "answer": " a",
        "explanation": "The differences between process-based and thread-based multitasking can be summarized like this:Process-based multitasking handles the concurrent execution of programs. Thread-based multitasking deals with the concurrent execution of pieces of the same program."
    },
    {
        "question": "What is the advantage of the multithreading program?",
        "options": [
            "a) Enables to utilize the idle and executing time present in most programs",
            "b) Enables to utilize the idle time present in most programs",
            "c) Both Enables to utilize the idle and executing time present in most programs & Enables to utilize the idle time present in most programs",
            "d) Only Enables to utilize the idle time present in most programs"
        ],
        "answer": "d",
        "explanation": "The principal advantage of multithreading is that it enables us to write very efficient programs because it lets us utilize the idle time that is present in most programs."
    },
    {
        "question": "Select the two type of threads mentioned in the concept of multithreading:",
        "options": [
            "a) foreground",
            "b) background",
            "c) only foreground",
            "d) both foreground & background"
        ],
        "answer": "d",
        "explanation": "None."
    },
    {
        "question": "Number of threads that exists for each of the processes that occurs in the program:",
        "options": [
            "a) at most 1",
            "b) atleast 1",
            "c) only 1",
            "d) both at most 1 & atleast 1"
        ],
        "answer": " d",
        "explanation": "All processes have at least one thread for execution, which is usually called the main thread because it is the primary thread that is executed when our program begins. From the main thread, we can create other threads."
    },
    {
        "question": "Choose the namespace which supports multithreading programming?",
        "options": [
            "a) System.net",
            "b) System.Linq",
            "c) System.Threading",
            "d) All of the mentioned"
        ],
        "answer": "c",
        "explanation": "The classes that support multithreaded programming are defined in the System.Threading namespace. Thus, you will usually include this statement at the start of any multithreaded program."
    },
    {
        "question": "What does the following C# code snippet specify?",
        "options": [],
        "answer": "d",
        "explanation": "To create a thread, instantiate an object of type Thread, which is a class defined in System.Threading. The simplest Thread constructor is shown here:"
    }
]