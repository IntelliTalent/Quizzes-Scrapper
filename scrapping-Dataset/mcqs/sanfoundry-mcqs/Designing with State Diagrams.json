[
    {
        "question": "Finite automata can be divided into which of the following groups?",
        "options": [
            "a) Acceptors or recognizers",
            "b) Transducers",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "c",
        "explanation": "Finite automata can be divided into the following groups \u2013 acceptors or recognizers and transducers."
    },
    {
        "question": "What is a Recognizer?",
        "options": [
            "a) Finite automata that both respond to events and generate actions",
            "b) Finite automata that respond to events but generate no actions",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "b",
        "explanation": "Finite automata that both respond to events and generate actions are called transducers and finite automata that respond to events but generate no actions are called acceptors, or recognizers."
    },
    {
        "question": "What is a transducer?",
        "options": [
            "a) Finite automata that both respond to events and generate actions",
            "b) Finite automata that respond to events but generate no actions",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "a",
        "explanation": "Finite automata that both respond to events and generate actions are called transducers and finite automata that respond to events but generate no actions are called acceptors, or recognizers."
    },
    {
        "question": "What among these follows acceptor model?",
        "options": [
            "a) They often model the behavior of small software modules",
            "b) A common use of models is to design a lexical analyzer, which is a program component that transforms a character stream into a stream of tokens, which are symbols recognized by the program",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "c",
        "explanation": "Acceptors often model the behavior of small software modules and a common use of acceptors is to design a lexical analyzer, which is a program component that transforms a character stream into a stream of tokens, which are symbols recognized by the program."
    },
    {
        "question": "Which of these represents Transducers?",
        "options": [
            "a) They can be used to model state-based behavior throughout software design",
            "b) In product design, they model the state-based behavior of entire products",
            "c) They are also useful for modeling software components",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "Transducers can be used to model state-based behavior throughout software design. In product design, transducers model the state-based behavior of entire products and transducers are also useful for modeling software components."
    },
    {
        "question": "What are dialog maps?",
        "options": [
            "a) It is a state diagram whose nodes represent user interface state",
            "b) They are thus used to model user interface behavior",
            "c) They are not useful for modeling software components",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "Dialog Map is a state diagram whose nodes represent user interface state and they are used to model user interface behavior"
    },
    {
        "question": "What is a user interface diagram?",
        "options": [
            "a) It is a drawing of (part of) a product\u2019s visual display when it is in a particular state",
            "b) It is a note attached to a line or arrow picking out part of a diagram",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "a",
        "explanation": "A user interface diagram is a drawing of (part of) a product\u2019s visual display when it is in a particular state and a callout is a note attached to a line or arrow picking out part of a diagram."
    },
    {
        "question": "What is callout?",
        "options": [
            "a) It is a drawing of (part of) a product\u2019s visual display when it is in a particular state",
            "b) It is a note attached to a line or arrow picking out part of a diagram",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "b",
        "explanation": "A user interface diagram is a drawing of (part of) a product\u2019s visual display when it is in a particular state and a callout is a note attached to a line or arrow picking out part of a diagram."
    },
    {
        "question": "What are the specifications of user interface should satisfy?",
        "options": [
            "a) Every user interface diagram should specify the visual form of a state in a dialog map",
            "b) Every state in a dialog map should have its visual form specified by a user interface diagram",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "c",
        "explanation": "Every user interface diagram should specify the visual form of a state in a dialog map and every state in a dialog map should have its visual form specified by a user interface diagram are the conditions that should be satisfied."
    },
    {
        "question": "Which of the following are the uses for Dialog maps?",
        "options": [
            "a) Dialog maps are useful whenever the behavior of a program\u2019s user interface is under study",
            "b) They can be used to help elicit stakeholder needs and desires and to model them to make sure they are well understood and documented",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "answer": "c",
        "explanation": "Dialog maps are useful whenever the behavior of a program\u2019s user interface is under study and they can be used to help elicit stakeholder needs and desires and to model them to make sure they are well understood and documented."
    }
]