[
    {
        "question": "Spring-WS supports using XML marshalling technology to marshal and unmarshal objects to and from XML documents.",
        "options": [
            "a) True",
            "b) False"
        ],
        "answer": "a",
        "explanation": "This technology is also known as object/XML mapping (OXM) because you are actually mapping objects to and from XML documents."
    },
    {
        "question": "To implement endpoints with an XML marshalling technology, you have to extend the:-",
        "options": [
            "a) AbstractMarshallingPayload",
            "b) AbstractMarshalling",
            "c) AbstractMarshallingPayloadEndpoint",
            "d) None of the mentioned"
        ],
        "answer": "c",
        "explanation": "To implement endpoints with an XML marshalling technology, you have to extend the AbstractMarshallingPayloadEndpoint class and configure an XML marshaller for it."
    },
    {
        "question": "Marshaller for JAXB 1.0:-",
        "options": [
            "a) org.springframework.oxm.jaxb.Jaxb1Marshaller",
            "b) org.springframework.oxm.jaxb.Jaxb2Marshaller",
            "c) org.springframework.oxm.castor.CastorMarshall",
            "d) org.springframework.oxm.xmlbeans.XmlBeansMarshaller"
        ],
        "answer": "a",
        "explanation": "JAXB 1.0 org.springframework.oxm.jaxb.Jaxb1Marshaller."
    },
    {
        "question": "Marshaller for JAXB 2.0:-",
        "options": [
            "a) org.springframework.oxm.jaxb.Jaxb1Marshaller",
            "b) org.springframework.oxm.jaxb.Jaxb2Marshaller",
            "c) org.springframework.oxm.castor.CastorMarshall",
            "d) org.springframework.oxm.xmlbeans.XmlBeansMarshaller"
        ],
        "answer": "b",
        "explanation": "JAXB 2.0 org.springframework.oxm.jaxb.Jaxb2Marshaller."
    },
    {
        "question": "Marshaller for Castor:-",
        "options": [
            "a) org.springframework.oxm.jaxb.Jaxb1Marshaller",
            "b) org.springframework.oxm.jaxb.Jaxb2Marshaller",
            "c) org.springframework.oxm.castor.CastorMarshall",
            "d) org.springframework.oxm.xmlbeans.XmlBeansMarshaller"
        ],
        "answer": "c",
        "explanation": "Castor org.springframework.oxm.castor.CastorMarshaller."
    },
    {
        "question": "Marshaller for XMLBeans:-",
        "options": [
            "a) org.springframework.oxm.jaxb.Jaxb1Marshaller",
            "b) org.springframework.oxm.jaxb.Jaxb2Marshaller",
            "c) org.springframework.oxm.castor.CastorMarshall",
            "d) org.springframework.oxm.xmlbeans.XmlBeansMarshaller"
        ],
        "answer": "d",
        "explanation": "XMLBeans org.springframework.oxm.xmlbeans.XmlBeansMarshaller."
    },
    {
        "question": "Marshaller for JiBX:-",
        "options": [
            "a) org.springframework.oxm.jaxb.Jaxb1Marshaller",
            "b) org.springframework.oxm.jaxb.Jaxb2Marshaller",
            "c) org.springframework.oxm.castor.CastorMarshall",
            "d) org.springframework.oxm.jibx.JibxMarshaller"
        ],
        "answer": "d",
        "explanation": "JiBX org.springframework.oxm.jibx.JibxMarshaller."
    },
    {
        "question": "Marshaller for XStream:-",
        "options": [
            "a) org.springframework.oxm.jaxb.Jaxb1Marshaller",
            "b) org.springframework.oxm.jaxb.Jaxb2Marshaller",
            "c) org.springframework.oxm.xstream.XStreamMarshaller",
            "d) org.springframework.oxm.jibx.JibxMarshaller"
        ],
        "answer": "c",
        "explanation": "XStream org.springframework.oxm.xstream.XStreamMarshaller."
    },
    {
        "question": "Spring-WS supports various XML marshalling APIs.",
        "options": [
            "a) Castor",
            "b) JAXB 1.0",
            "c) XMLBeans",
            "d) All of the mentioned"
        ],
        "answer": "d",
        "explanation": "Spring-WS supports various XML marshalling APIs, including JAXB 1.0, JAXB 2.0, Castor, XMLBeans, JiBX, and XStream."
    },
    {
        "question": "For some marshalling APIs, the object model must be generated by them so that they can insert marshalling-specific information.",
        "options": [
            "a) True",
            "b) False"
        ],
        "answer": "a",
        "explanation": "Because Castor supports marshalling between XML messages and arbitrary Java objects, you can start creating the following classes by yourself."
    },
    {
        "question": "A marshalling endpoint requires:-",
        "options": [
            "a) marshaller",
            "b) unmarshaller",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "answer": "c",
        "explanation": "A marshalling endpoint requires both the marshaller and unmarshaller properties to be set. Usually, you can specify a single marshaller for both properties. For Castor, you declare a CastorMarshaller bean as the marshaller."
    },
    {
        "question": "Castor requires a mapping configuration file to know how to map objects to and from XML documents.",
        "options": [
            "a) True",
            "b) False"
        ],
        "answer": "a",
        "explanation": "You can create this file in the classpath root and specify it in the mappingLocation property (e.g., mapping.xml)."
    },
    {
        "question": "Spring-WS supports annotating an arbitrary class as a service endpoint by:-",
        "options": [
            "a) @Endpoint",
            "b) @End",
            "c) @Point",
            "d) None of the mentioned"
        ],
        "answer": "a",
        "explanation": "Spring-WS supports annotating an arbitrary class as a service endpoint by the @Endpoint annotation, without extending a framework-specific class."
    },
    {
        "question": "When you are using XML marshalling, WebServiceTemplate requires both the marshaller and unmarshaller properties to be set.",
        "options": [
            "a) True",
            "b) False"
        ],
        "answer": "a",
        "explanation": "You can also set them to WebServiceGatewaySupport if you extend this class to have WebServiceTemplate auto-created."
    },
    {
        "question": "A Spring-WS client can also marshall and unmarshal the request and response objects to and from XML messages.",
        "options": [
            "a) True",
            "b) False"
        ],
        "answer": "a",
        "explanation": " As an example, we will create a client using Castor as the marshaller so that you can reuse the object models."
    }
]